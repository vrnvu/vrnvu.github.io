<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
	<title>arnau diaz</title>
	<subtitle>epokhe</subtitle>
	<link href="https://www.arnaudiaz.com/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://www.arnaudiaz.com"/>
	<generator uri="https://www.getzola.org/">Zola</generator>
	<updated>2024-07-22T00:00:00+00:00</updated>
	<id>https://www.arnaudiaz.com/atom.xml</id>
	<entry xml:lang="en">
		<title>what is code</title>
		<published>2024-07-22T00:00:00+00:00</published>
		<updated>2024-07-22T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.arnaudiaz.com/blog/what-is-code/" type="text/html"/>
		<id>https://www.arnaudiaz.com/blog/what-is-code/</id>
		<content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;What is code?
An instruction, a creation, a structure, a symphony.&lt;&#x2F;p&gt;
&lt;p&gt;AND&lt;&#x2F;p&gt;
&lt;p&gt;How do you use it?
When it computes.&lt;&#x2F;p&gt;
&lt;p&gt;What is a program?
A medium.&lt;&#x2F;p&gt;
&lt;p&gt;What is a machine?
A collaborator, a colleague.&lt;&#x2F;p&gt;
&lt;p&gt;What is a byte?
A unit of movement.&lt;&#x2F;p&gt;
&lt;p&gt;What is an algorithm?
A means to an end.&lt;&#x2F;p&gt;
&lt;p&gt;What is data?
A pulse, a narrative.&lt;&#x2F;p&gt;
&lt;p&gt;What is refactoring?
Another chance.&lt;&#x2F;p&gt;
&lt;p&gt;What is design?
A conversation, a dialogue.&lt;&#x2F;p&gt;
&lt;p&gt;What is functionality?
A reply to a need.&lt;&#x2F;p&gt;
&lt;p&gt;What is innovation?
A need to reply.&lt;&#x2F;p&gt;
&lt;p&gt;How do you approach product?
We build products that people love to use.&lt;&#x2F;p&gt;
&lt;p&gt;What would you like to develop? Besides Software?
An understanding.&lt;&#x2F;p&gt;
&lt;p&gt;What words do you live by?
We.&lt;&#x2F;p&gt;
&lt;p&gt;(Ends)&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>i use flox to</title>
		<published>2024-05-23T00:00:00+00:00</published>
		<updated>2024-05-23T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.arnaudiaz.com/blog/i-use-flox-to/" type="text/html"/>
		<id>https://www.arnaudiaz.com/blog/i-use-flox-to/</id>
		<content type="html">&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;i-use-flox-to&quot;&gt;I use flox to&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;I use flox to ensure my team environment is declarative&lt;&#x2F;li&gt;
&lt;li&gt;I use flox to ensure my team environment is reproducible&lt;&#x2F;li&gt;
&lt;li&gt;I use flox to ensure my team environment is reliable&lt;&#x2F;li&gt;
&lt;li&gt;I use flox to manage and share development dependencies with my team
&lt;ul&gt;
&lt;li&gt;Java, Go, Rust, Python&lt;&#x2F;li&gt;
&lt;li&gt;Gradle, Maven, Poetry&lt;&#x2F;li&gt;
&lt;li&gt;Libtorch, CUDA&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;I use flox to manage and share operational dependencies with my team
&lt;ul&gt;
&lt;li&gt;curl, wget, fd, fzf, sd&lt;&#x2F;li&gt;
&lt;li&gt;Jfrog, Artfactory, Github, gitconfig &lt;&#x2F;li&gt;
&lt;li&gt;Scripts and utilities&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;I use flox to ensure that my team secrets are managed properly
&lt;ul&gt;
&lt;li&gt;VPN, AWS, Okta, SSM and SSH&lt;&#x2F;li&gt;
&lt;li&gt;Shared and private secrets are now easy&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;I use flox to on-board new team members automatically in 5 minutes &lt;&#x2F;li&gt;
&lt;li&gt;I use flox to ensure the local environment always works
&lt;ul&gt;
&lt;li&gt;We now have CI for local&#x2F;dev&#x2F;pre&#x2F;pro for ALL projects for free&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;I use flox because it works&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>spaceship to the end of time</title>
		<published>2024-02-06T00:00:00+00:00</published>
		<updated>2024-02-06T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.arnaudiaz.com/blog/spaceship-to-the-end/" type="text/html"/>
		<id>https://www.arnaudiaz.com/blog/spaceship-to-the-end/</id>
		<content type="html">&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;spaceship-to-the-end-of-time&quot;&gt;Spaceship to the end of time&lt;&#x2F;h1&gt;
&lt;p&gt;Welcome aboard. Please fasten your seat belt securely and refrain from using the restrooms while the sign is on. Our ship will start to accelerate at 1G continuously to the end of time. Thanks for flying with us.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;After 10 years of ship time at maximum acceleration, the universe will be 10 years older.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;After 20 years of ship time at maximum acceleration, the universe will be 37 years older.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Due to time dilation, perceived speed increases faster and faster. While visible light blue-shifts to ultraviolet, infrared takes its place.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;After 50 years of ship time at maximum acceleration, the universe will be 218 years older.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;More and more photons hit the ship each second. Deep infrared left over from the big bang is blue-shifted too. There is a lot of cosmic microwave radiation.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;After 100 years of ship time at maximum acceleration, the universe will be 8,450 years older.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;It takes us only around 100 years to be staring into the big bang. Enjoy the views.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;After 150 years of ship time at maximum acceleration, the universe will be 15,000 years older.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;After 200 years of ship time at maximum acceleration, the universe will be 100,000 years older.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;After 850 years of ship time at maximum acceleration, the universe is 10^30 years older. To be more precise: 1,000,000,000,000,000,000,000,000,000,000 years older.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;At this point, only white dwarfs, neutron stars, and various stellar remnants remain. Galaxies have dissipated, and stars like our Sun are distant memories. If any still exist to remember them.&lt;&#x2F;p&gt;
&lt;p&gt;We’re a long, long way from “heat death” – from the Universe becoming an undifferentiated entropic sea of particles – but it is already a very different place.&lt;&#x2F;p&gt;
&lt;p&gt;Let’s keep going…&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>simulacra and simulation</title>
		<published>2024-01-05T00:00:00+00:00</published>
		<updated>2024-01-05T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.arnaudiaz.com/blog/simulacra-and-simulation/" type="text/html"/>
		<id>https://www.arnaudiaz.com/blog/simulacra-and-simulation/</id>
		<content type="html">&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;simulacra-and-simulation&quot;&gt;Simulacra and simulation&lt;&#x2F;h1&gt;
&lt;p&gt;In his book “Simulacra and Simulation” published in 1981, Jean Baudrillard concluded that we were living in a simulation constructed by the media. We could argue that in tech companies, we live in a simulation constructed by management.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;distortion&quot;&gt;Distortion&lt;&#x2F;h2&gt;
&lt;p&gt;Baudrillard categorizes the breakdown of the image into simulation via four successive phases in his book “Simulations”:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;The image first reflects a basic reality.&lt;&#x2F;li&gt;
&lt;li&gt;Then it masks or perverts that basic reality.&lt;&#x2F;li&gt;
&lt;li&gt;Then it masks the absence of a basic reality.&lt;&#x2F;li&gt;
&lt;li&gt;Finally, the image bears no relation to any reality whatever, it is its own pure simulacrum.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;In a company, processes and methodologies are distorted until they only exist in a pure simulacrum. Take meetings as an example:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;A meeting is created in order to discuss and reach an agreement for a product decision.&lt;&#x2F;li&gt;
&lt;li&gt;A ritual is created, i.e. daily meeting, in order to make more decisions.&lt;&#x2F;li&gt;
&lt;li&gt;Rituals are recreated, i.e. sprint planning, backlog, and retrospective, in order to accommodate previous rituals.&lt;&#x2F;li&gt;
&lt;li&gt;Finally, methodologies and processes are formalized by management, new managers are needed to keep up with the rituals, which generates more meetings in order to reach an agreement on how to operate meetings, which will end up in more methodologies and processes.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Business procedures and methodologies are abstracted and generalized until they become images that mirror deception, masking the absence of purpose until they mirror themselves.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>the way of a true leader</title>
		<published>2023-12-04T00:00:00+00:00</published>
		<updated>2023-12-04T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.arnaudiaz.com/blog/the-way-of-a-true-leader/" type="text/html"/>
		<id>https://www.arnaudiaz.com/blog/the-way-of-a-true-leader/</id>
		<content type="html">&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;the-way-of-a-true-leader&quot;&gt;The way of a true leader&lt;&#x2F;h1&gt;
&lt;p&gt;A reflection on Ursula K. Le Guin.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;acting-simpliy&quot;&gt;Acting simpliy&lt;&#x2F;h2&gt;
&lt;p&gt;A true leader remains almost invisible to those they guide, letting their actions speak for themselves.&lt;&#x2F;p&gt;
&lt;p&gt;Lesser leaders may be known, admired, feared, or even despised. If someone is admired, feared, or despised for being a leader, can they truly be one? True leaders don’t seek the spotlight.&lt;&#x2F;p&gt;
&lt;p&gt;Trust is a reflection. What you give is what you receive.&lt;&#x2F;p&gt;
&lt;p&gt;When work is done quietly and effectively, people will say, &amp;quot;We did it.&amp;quot;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>before you speak</title>
		<published>2023-09-10T00:00:00+00:00</published>
		<updated>2023-09-10T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.arnaudiaz.com/blog/before-you-speak/" type="text/html"/>
		<id>https://www.arnaudiaz.com/blog/before-you-speak/</id>
		<content type="html">&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;before-you-speak&quot;&gt;Before you speak&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;Is it true?&lt;&#x2F;li&gt;
&lt;li&gt;Is it necessary?&lt;&#x2F;li&gt;
&lt;li&gt;Is it kind?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>borges</title>
		<published>2023-05-23T00:00:00+00:00</published>
		<updated>2023-05-23T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.arnaudiaz.com/blog/borges/" type="text/html"/>
		<id>https://www.arnaudiaz.com/blog/borges/</id>
		<content type="html">&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;borges&quot;&gt;Borges&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.cadena3.com&#x2F;admin&#x2F;playerswf&#x2F;fotos&#x2F;ARCHI_941094.jpg&quot; alt=&quot;borges&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Creating abstractions means traversing an endless maze of illusions and distorted information. Mirrors deceive.&lt;&#x2F;p&gt;
&lt;p&gt;Simplifying abstractions is to submerge oneself in the limitless complexity of reality. Myriads of grains of sand.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;It only takes two facing mirrors to build a labyrinth.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Our fate is either to perish, disoriented in the labyrinth, or to be swallowed by the sands.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;on-exactitude-in-science&quot;&gt;On Exactitude in Science&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;... In that Empire, the Art of Cartography attained such Perfection that the map of a single Province occupied the entirety of a City, and the map of the Empire, the entirety of a Province. In time, those Unconscionable Maps no longer satisfied, and the Cartographers Guilds struck a Map of the Empire whose size was that of the Empire, and which coincided point for point with it. The following Generations, who were not so fond of the Study of Cartography as their Forebears had been, saw that that vast Map was Useless, and not without some Pitilessness was it, that they delivered it up to the Inclemencies of Sun and Winters. In the Deserts of the West, still today, there are Tattered Ruins of that Map, inhabited by Animals and Beggars; in all the Land there is no other Relic of the Disciplines of Geography.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;the-writing-of-the-god&quot;&gt;The Writing of the God&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;One day or one night—between my days and nights, what difference can there be?—I dreamed that there was a grain of sand on the floor of my cell. Unconcerned, I went back to sleep; I dreamed that I woke up and there were two grains of sand. Again I slept; I dreamed that now there were three. Thus the grains of sand multiplied, little by little, until they filled the cell and I was dying beneath that hemisphere of sand. I realized that I was dreaming; with a vast effort I woke myself. But waking up was useless—I was suffocated by the countless sand. Someone said to me: You have wakened not out of sleep, but into a prior dream, and that dream lies within another, and so on, to infinity, which is the number of the grains of sand. The path that you are to take is endless, and you will die before you have truly awakened.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;the-two-kings-and-the-two-labyrinths&quot;&gt;The Two Kings and the Two Labyrinths&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;It is said by men worthy of belief (though Allah’s knowledge is greater) that in the first days there was a king of the isles of Babylonia who called together his architects and his priests and bade them build him a labyrinth so confused and so subtle that the most prudent men would not venture to enter it, and those who did would lose their way. Most unseemly was the edifice that resulted, for it is the prerogative of God, not man, to strike confusion and inspire wonder. In time there came to the court a king of Arabs, and the king of Babylonia (to muck the simplicity of his guest) bade him enter the labyrinth, where the king of Arabs wandered, humiliated and confused, until the coming of the evening, when he implored God’s aid and found the door. His lips offered no complaint, though he said to the king of Babylonia that in his land he had another labyrinth, and Allah willing, he would see that someday the king of Babylonia made its acquaintance. Then he returned to Arabia with his captains and his wardens and he wreaked such havoc upon kingdoms of Babylonia, and with such great blessing by fortune, that he brought low his castles, crushed his people, and took the king of Babylonia himself captive. He tied him atop a swift-footed camel and led him into the desert. Three days they rode, and then he said to him, “O king of time and substance and cipher of the century! In Babylonia didst thou attempt to make me lose my way in a labyrinth of brass with many stairways, doors, and walls; now the Powerful One has seen fit to allow me to show thee mine, which has no stairways to climb, nor walls to impede thy passage.” Then he untied the bonds of the king of Babylonia and abandoned him in the middle of the desert, where he died of hunger and thirst. Glory to him who does not die. &lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>this is not a hello world</title>
		<published>2023-05-22T00:00:00+00:00</published>
		<updated>2023-05-22T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.arnaudiaz.com/blog/this-is-not-a-hello-world/" type="text/html"/>
		<id>https://www.arnaudiaz.com/blog/this-is-not-a-hello-world/</id>
		<content type="html">&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;this-is-not-a-hello-world&quot;&gt;This is not a hello world&lt;&#x2F;h1&gt;
&lt;pre data-lang=&quot;c&quot; style=&quot;background-color:#2e3440;color:#d8dee9;&quot; class=&quot;language-c &quot;&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span style=&quot;color:#5e81ac;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;lt;stdio.h&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#81a1c1;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#88c0d0;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#88c0d0;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;quot;Hello World&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eceff4;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#81a1c1;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eceff4;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;This is not a hello world.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;This is not a program.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;This is not code.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>creative space and time</title>
		<published>2023-04-21T00:00:00+00:00</published>
		<updated>2023-04-21T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.arnaudiaz.com/blog/creative-space-time/" type="text/html"/>
		<id>https://www.arnaudiaz.com/blog/creative-space-time/</id>
		<content type="html">&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;creative-space-and-time&quot;&gt;Creative space and time&lt;&#x2F;h1&gt;
&lt;p&gt;Software engineering is driven by human creativity and problem-solving. For some, it is even regarded as a form of &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;arnaudiaz.com&#x2F;blog&#x2F;programming-as-an-art&#x2F;&quot;&gt;art&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Space&lt;&#x2F;strong&gt; allows engineers, as people, to choose their projects, methods, and tools. This freedom encourages personal expression and unique approaches to solving problems.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Time&lt;&#x2F;strong&gt; gives engineers the ability to set their own pace for releasing features, working on them, collaborating and making improvements. This flexibility supports thoughtful exploration and refinement.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;for-company-growth&quot;&gt;For company growth&lt;&#x2F;h2&gt;
&lt;p&gt;Hire skilled engineers. Give them space and time.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;for-team-growth&quot;&gt;For team growth&lt;&#x2F;h2&gt;
&lt;p&gt;Hire skilled engineers. Give them space and time.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;for-personal-growth&quot;&gt;For personal growth&lt;&#x2F;h2&gt;
&lt;p&gt;Bend space and time.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>how to fix a monolith</title>
		<published>2023-04-11T00:00:00+00:00</published>
		<updated>2023-04-11T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.arnaudiaz.com/blog/fix-a-mono/" type="text/html"/>
		<id>https://www.arnaudiaz.com/blog/fix-a-mono/</id>
		<content type="html">&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;how-to-fix-a-monolith&quot;&gt;how to fix a monolith&lt;&#x2F;h1&gt;
&lt;p&gt;When it comes to improving the performance of your monolithic application, the number of users is not as important as the amount of traffic they generate. For example, some products can have fewer users but generate more traffic than others with a larger user base. Therefore, it&#x27;s crucial to consider the requests and traffic your monolith receives.&lt;&#x2F;p&gt;
&lt;p&gt;To enhance your application&#x27;s performance and efficiency, you need to identify bottlenecks and problematic functionalities. This involves monitoring the application to determine:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The functionalities that receive the most traffic&lt;&#x2F;li&gt;
&lt;li&gt;The functionalities that block the most CPU time&lt;&#x2F;li&gt;
&lt;li&gt;The functionalities that require the most memory&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;redesign&quot;&gt;redesign&lt;&#x2F;h2&gt;
&lt;p&gt;After identifying bottlenecks and problems, the next step is to redesign the product accordingly. This may involve breaking down the monolith into microservices that can scale independently, and considering traffic patterns to ensure optimal performance. Evaluate whether certain functionalities can be split or merged when redesigning the backend. By addressing these issues, you can enhance the product&#x27;s performance, efficiency, and reduce costs.&lt;&#x2F;p&gt;
&lt;p&gt;For example, if you identify that a bottleneck is one functionality that is composed of two operations, you can start by splitting it into two. By doing this, you can scale both operations horizontally instead of having one, allowing you to better manage traffic and reduce the impact of high traffic on your system. This approach can also help you address the issue of load imbalances, where some servers or resources may be overloaded while others are underutilized.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;user-impact&quot;&gt;user impact&lt;&#x2F;h2&gt;
&lt;p&gt;To create a better backend, it&#x27;s important to focus on the operational level, not just the service level. Each operation can have a varying number of requests, but their impact, measured by the ratio of errors, may differ significantly.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Operation A: 10,000 requests with 10 failures - error rate is 0.1%&lt;&#x2F;li&gt;
&lt;li&gt;Operation B: 100 requests with 10 failures - error rate is 10%&lt;&#x2F;li&gt;
&lt;li&gt;Operation C: 100 requests with 50 failures - error rate is 50%&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;If these requests are in the same service, the initial requests may hide the true error rate of your service, making it appear to have an error rate of 0.03%. Therefore, it&#x27;s critical to analyze the impact of each operation and prioritize them accordingly.&lt;&#x2F;p&gt;
&lt;p&gt;Focus on the operations that have the biggest impact on user experience, not just the ones that happen most often. For instance, if a manual step in a process is crucial, users may have a bad experience if it fails, even if it&#x27;s not done often. On the other hand, an operation with lots of requests that rarely fails may not affect the user experience, even if it has a high error rate. So, prioritize critical operations based on their impact, not just how often they&#x27;re used.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;To make a monolithic application perform better, focus on finding bottlenecks and problems. Check the traffic patterns and see what needs fixing. Then, redesign the app by breaking it down into smaller services or changing how the functions work. Also, prioritize critical tasks that impact the user experience. By doing these things, you can make the app run better, save money, and make users happy.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>david lynch motivates you</title>
		<published>2023-01-25T00:00:00+00:00</published>
		<updated>2023-01-25T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.arnaudiaz.com/blog/david-lynch-motivates-you/" type="text/html"/>
		<id>https://www.arnaudiaz.com/blog/david-lynch-motivates-you/</id>
		<content type="html">&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;david-lynch-motivates-you&quot;&gt;david lynch motivates you&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a rel=&quot;nofollow noreferrer&quot; title=&quot;david lynch motivates you&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=5NVMeVB5Q-Q&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;cdn.artphotolimited.com&#x2F;images&#x2F;60913d60bd40b85323893a87&#x2F;300x300&#x2F;david-lynch-2012.jpg&quot; alt=&quot;david lynch motivates you&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Stay alert&lt;&#x2F;li&gt;
&lt;li&gt;Do your work&lt;&#x2F;li&gt;
&lt;li&gt;Don’t worry about the world going by&lt;&#x2F;li&gt;
&lt;li&gt;Don’t sit around doing nothing&lt;&#x2F;li&gt;
&lt;li&gt;Get in gear and do it &lt;&#x2F;li&gt;
&lt;li&gt;Don’t take no for an answer &lt;&#x2F;li&gt;
&lt;li&gt;Figure out how to get it done&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Translate these lessons to Cinema, or a painting, or to whatever. &lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>think in 3D</title>
		<published>2022-12-01T00:00:00+00:00</published>
		<updated>2022-12-01T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.arnaudiaz.com/blog/think-in-3d/" type="text/html"/>
		<id>https://www.arnaudiaz.com/blog/think-in-3d/</id>
		<content type="html">&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;think-in-3d&quot;&gt;Think in 3D&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;t4.ftcdn.net&#x2F;jpg&#x2F;05&#x2F;12&#x2F;86&#x2F;27&#x2F;360_F_512862789_abYbb2RPLzpN8aAjteTBb4xGnRgqVSyw.jpg&quot; alt=&quot;2d vs 3d&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Imagine you and your team working on a product. &lt;&#x2F;p&gt;
&lt;p&gt;As traffic increases, the team faces a decision on how to scale the product. &lt;&#x2F;p&gt;
&lt;p&gt;You discuss:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Horizontal scaling&lt;&#x2F;strong&gt;: adding more instances.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Vertical scaling&lt;&#x2F;strong&gt;: changing the instance type to a bigger machine with more resources.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Pause for a moment. Did you notice something? If not, you might be seeing in 2D. Why limit your creative space to 2D? Consider also optimizing the application itself. Think in 3D. Enhancing the efficiency and performance of your application will offer better ways to manage growth.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>emotional micromanagement</title>
		<published>2022-08-12T00:00:00+00:00</published>
		<updated>2022-08-12T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.arnaudiaz.com/blog/emotional-micromanagement/" type="text/html"/>
		<id>https://www.arnaudiaz.com/blog/emotional-micromanagement/</id>
		<content type="html">&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;emotional-micromanagement&quot;&gt;Emotional micromanagement&lt;&#x2F;h1&gt;
&lt;p&gt;Examples of micromanagement that we found&lt;sup class=&quot;footnote-reference&quot;&gt;&lt;a href=&quot;#1&quot;&gt;1&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt; with a quick Google search:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;They ask to be copied on all emails from the team, whether they genuinely need to be included or not.&lt;&#x2F;li&gt;
&lt;li&gt;They are reluctant to delegate even the most minor tasks to their team members.&lt;&#x2F;li&gt;
&lt;li&gt;They constantly check where their employees are, seeing if they&#x27;re at their desks or online, and may even monitor bathroom breaks.&lt;&#x2F;li&gt;
&lt;li&gt;They ask for excessively frequent updates on even small tasks and check and double-check deadlines.&lt;&#x2F;li&gt;
&lt;li&gt;They rarely ask for input from anyone else.&lt;&#x2F;li&gt;
&lt;li&gt;They take pleasure in correcting someone else&#x27;s work or pointing out very small errors.&lt;&#x2F;li&gt;
&lt;li&gt;They scrutinize each task intently, no matter how small or low-priority the work is.&lt;&#x2F;li&gt;
&lt;li&gt;They never seem to be satisfied with any work an employee performs.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Adapted examples of emotional micromanagement:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;They attempt to be included in all casual conversations.&lt;&#x2F;li&gt;
&lt;li&gt;They will force team activities, off-sites, and treat the team as a family.&lt;&#x2F;li&gt;
&lt;li&gt;They constantly check how their employees feel and think it&#x27;s their job to help them.&lt;&#x2F;li&gt;
&lt;li&gt;They ask for excessively frequent updates on feelings and personal topics they may think are relevant for the employee&#x27;s well-being.&lt;&#x2F;li&gt;
&lt;li&gt;They are the certified coaches and psychologists of the team. It&#x27;s their job to help you fulfill your passions and goals!&lt;&#x2F;li&gt;
&lt;li&gt;They take pleasure in correcting how someone else deals with their mental health or soft skills.&lt;&#x2F;li&gt;
&lt;li&gt;They will OKR your life and feelings. &amp;quot;When was the last time you visited your mom? How did that make you feel? Can I help you? Let me help you!&amp;quot;&lt;&#x2F;li&gt;
&lt;li&gt;They never seem to be satisfied with how good you feel or how well you perform. The employee has to always push and grind. Happiness must be achieved.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;footnotes&quot;&gt;Footnotes&lt;&#x2F;h1&gt;
&lt;div class=&quot;footnote-definition&quot; id=&quot;1&quot;&gt;&lt;sup class=&quot;footnote-definition-label&quot;&gt;1&lt;&#x2F;sup&gt;
&lt;p&gt;&lt;em&gt;Micromanagement in the Workplace: Definition, Examples and Harmful Effects&lt;&#x2F;em&gt; &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;blog.empuls.io&#x2F;micromanagement&quot;&gt;micromanagement&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>what is async</title>
		<published>2022-06-26T00:00:00+00:00</published>
		<updated>2022-06-26T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.arnaudiaz.com/blog/what-is-async/" type="text/html"/>
		<id>https://www.arnaudiaz.com/blog/what-is-async/</id>
		<content type="html">&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;what-is-async&quot;&gt;What is async?&lt;&#x2F;h1&gt;
&lt;p&gt;To start, if a function is a routine or a subroutine, then an async function is a coroutine.&lt;&#x2F;p&gt;
&lt;p&gt;In the main program, there is a main stack that contains the memory space allocated to execute a function. This space is called a stack frame, and it stores local variables and parameters. The stack also contains the variables and stack frames of the functions being executed.&lt;&#x2F;p&gt;
&lt;p&gt;When you return from a function, you get rid of the stack frame from the main stack, and you lose the local variables of that function.&lt;&#x2F;p&gt;
&lt;p&gt;In a coroutine, you can pause the execution and return control to where you were before without removing anything from the stack. This is an &lt;code&gt;async&lt;&#x2F;code&gt; function.&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s consider this code snippet, which includes a &lt;code&gt;main&lt;&#x2F;code&gt; function and a &lt;code&gt;foo&lt;&#x2F;code&gt; coroutine that you can pause.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; style=&quot;background-color:#2e3440;color:#d8dee9;&quot; class=&quot;language-rust &quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt; main () {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;2   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#88c0d0;&quot;&gt;foo&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;3 &lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;4 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#88c0d0;&quot;&gt;foo&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span&gt;   suspend 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;6 &lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We can use the &lt;code&gt;async&lt;&#x2F;code&gt; keyword to indicate that &lt;code&gt;foo&lt;&#x2F;code&gt; will give us a pointer to the stack frame of the coroutine. This allows us to return to where we were in the main function. Keep in mind that this behavior is only a convention, and we could return additional data about the coroutine if we wanted to. Similarly, we can use the &lt;code&gt;resume&lt;&#x2F;code&gt; keyword to indicate that we want to return to the stack frame. It&#x27;s worth noting that this is a syntax convention that I&#x27;ve created.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; style=&quot;background-color:#2e3440;color:#d8dee9;&quot; class=&quot;language-rust &quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt; main () {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;   f &lt;&#x2F;span&gt;&lt;span style=&quot;color:#81a1c1;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; async &lt;&#x2F;span&gt;&lt;span style=&quot;color:#88c0d0;&quot;&gt;foo&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;   resume &lt;&#x2F;span&gt;&lt;span style=&quot;color:#88c0d0;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;4 &lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;5 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#88c0d0;&quot;&gt;foo&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span&gt;   suspend 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;7   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#81a1c1;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;10
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;8 &lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol&gt;
&lt;li&gt;Begin by loading the main function at LOC 1.&lt;&#x2F;li&gt;
&lt;li&gt;The stack contains the execution line and the variables of the main function and its frames.&lt;&#x2F;li&gt;
&lt;li&gt;At LOC 2, call the &lt;code&gt;foo()&lt;&#x2F;code&gt; function and save the pointer to the frame.&lt;&#x2F;li&gt;
&lt;li&gt;At LOC 6, you are inside the stack frame of &lt;code&gt;foo()&lt;&#x2F;code&gt;, where you make a &lt;code&gt;suspend&lt;&#x2F;code&gt; call and return execution to the caller without popping the frame.&lt;&#x2F;li&gt;
&lt;li&gt;At LOC 3, you &lt;code&gt;resume&lt;&#x2F;code&gt; the frame.&lt;&#x2F;li&gt;
&lt;li&gt;At LOC 7, you &lt;code&gt;return&lt;&#x2F;code&gt; the value 10 and pop the frame.&lt;&#x2F;li&gt;
&lt;li&gt;Now you are at LOC 4. If you had saved the value in a variable, you could use it normally. After all, it&#x27;s just another variable in the stack, right?&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;How does the following example work? What does it print?&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; style=&quot;background-color:#2e3440;color:#d8dee9;&quot; class=&quot;language-rust &quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt; main () {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;   f &lt;&#x2F;span&gt;&lt;span style=&quot;color:#81a1c1;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; async &lt;&#x2F;span&gt;&lt;span style=&quot;color:#88c0d0;&quot;&gt;foo&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;   v &lt;&#x2F;span&gt;&lt;span style=&quot;color:#81a1c1;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; resume &lt;&#x2F;span&gt;&lt;span style=&quot;color:#88c0d0;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;4   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#88c0d0;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(v)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;5 &lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;6 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#88c0d0;&quot;&gt;foo&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span&gt;   suspend 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;8   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#81a1c1;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;10
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;9 &lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And what about this one? What does it print?&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; style=&quot;background-color:#2e3440;color:#d8dee9;&quot; class=&quot;language-rust &quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt; var global &lt;&#x2F;span&gt;&lt;span style=&quot;color:#81a1c1;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt; main () {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;   f &lt;&#x2F;span&gt;&lt;span style=&quot;color:#81a1c1;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#88c0d0;&quot;&gt;foo&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;4   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#81a1c1;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span&gt;(global &lt;&#x2F;span&gt;&lt;span style=&quot;color:#81a1c1;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span&gt;     resume f
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;6   &lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;7   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#88c0d0;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(global)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;8 &lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;9 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#88c0d0;&quot;&gt;foo&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;10   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#81a1c1;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span&gt;     global&lt;&#x2F;span&gt;&lt;span style=&quot;color:#81a1c1;&quot;&gt;++
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;11&lt;&#x2F;span&gt;&lt;span&gt;     suspend
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;12  &lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;13&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The &lt;code&gt;await&lt;&#x2F;code&gt; keyword causes the program to wait in the main function instead of continuing with the execution. There&#x27;s nothing mysterious about it, it simply waits for the frame to return. This makes it ideal for IO tasks, where you may need to wait for a response. For example, you might do some work in the background and then await the response.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;function-coloring&quot;&gt;Function coloring&lt;&#x2F;h2&gt;
&lt;p&gt;The reason that &lt;code&gt;async&lt;&#x2F;code&gt; functions need to go with async is that when managing memory, there can be situations where you have uninitialized variables. If you execute code before the &lt;code&gt;await&lt;&#x2F;code&gt; and after the &lt;code&gt;async&lt;&#x2F;code&gt; function, it could print garbage because there are uninitialized pointers waiting for a value. Sometimes the compiler can detect this, but other times it can&#x27;t.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s worth noting that we&#x27;re just using pointers to execute the functions and coroutines. This means that you can run them in any thread or scheduler you need, depending on your requirements.&lt;&#x2F;p&gt;
&lt;p&gt;In conclusion, &lt;strong&gt;it&#x27;s important to understand that coroutines have nothing to do with parallelism&lt;&#x2F;strong&gt;. They are simply a way to manage memory and handle IO tasks in an efficient and elegant way.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;blocking-non-blocking&quot;&gt;Blocking, non-blocking&lt;&#x2F;h2&gt;
&lt;p&gt;In a subroutine, the caller always waits for the return value. However, with coroutines and &lt;code&gt;async&lt;&#x2F;code&gt; functions, the caller only waits for the result if they use the &lt;code&gt;await&lt;&#x2F;code&gt; keyword. The use of &lt;code&gt;suspend&lt;&#x2F;code&gt; in the function body doesn&#x27;t determine whether the caller has to block or not.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;The decision to wait or not is up to the caller&lt;&#x2F;strong&gt;, and whether a function is &lt;code&gt;async&lt;&#x2F;code&gt; or not doesn&#x27;t determine whether it blocks or is non-blocking. Instead, it&#x27;s the use of &lt;code&gt;await&lt;&#x2F;code&gt; that matters in determining whether a caller needs to block or not.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;more&quot;&gt;More&lt;&#x2F;h2&gt;
&lt;p&gt;This post was an introduction with some inaccuracies. Read &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;arnaudiaz.com&#x2F;blog&#x2F;types-of-coroutines&#x2F;&quot;&gt;this&lt;&#x2F;a&gt; for more.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>syntax vs semantics</title>
		<published>2022-06-07T00:00:00+00:00</published>
		<updated>2022-06-07T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.arnaudiaz.com/blog/syntax-vs-semantics/" type="text/html"/>
		<id>https://www.arnaudiaz.com/blog/syntax-vs-semantics/</id>
		<content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Two definitions quoting one of our favourite courses &lt;sup class=&quot;footnote-reference&quot;&gt;&lt;a href=&quot;#1&quot;&gt;1&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt;.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Syntax&lt;&#x2F;strong&gt;. By syntax, we mean the rules that define what forms a well-formed program in the language. Including the keywords, restrictions on whitespace and formatting, punctuation, operators, etc. &lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Semantics&lt;&#x2F;strong&gt;. By semantics, we mean the rules that define the behavior of programs. In other words, semantics is about the meaning of a program—what computation a particular piece of syntax represents. Note that although “semantics” is plural in form, we use it as singular. That’s like “mathematics” or “physics”.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;So then, what is code readability?&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Code readability = syntax that make semantics obvious.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;If a block of code is written in an imperative style or functional style doesn&#x27;t matter. Ask yourself instead, are the semantics clear? Are we coping or moving the values? Are we cloning the references? Are we iterating over mutable references or copies of the value?&lt;&#x2F;p&gt;
&lt;p&gt;A good language, with good code readability, makes semantics obvious. A good programmer, encourages good readability. With good readability we don&#x27;t have doubts about what a piece of code is doing. &lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;footnotes&quot;&gt;Footnotes&lt;&#x2F;h1&gt;
&lt;div class=&quot;footnote-definition&quot; id=&quot;1&quot;&gt;&lt;sup class=&quot;footnote-definition-label&quot;&gt;1&lt;&#x2F;sup&gt;
&lt;p&gt;&lt;em&gt;Cornell Ocaml cs3110&lt;&#x2F;em&gt; &lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;cs3110.github.io&#x2F;textbook&#x2F;chapters&#x2F;basics&#x2F;intro.html?highlight=syntax&quot;&gt;cs3110&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>engineers as gardeners</title>
		<published>2022-05-06T00:00:00+00:00</published>
		<updated>2022-05-06T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.arnaudiaz.com/blog/engineers-as-gardeners/" type="text/html"/>
		<id>https://www.arnaudiaz.com/blog/engineers-as-gardeners/</id>
		<content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;We need to let go of the idea that software development is about planning and execution. &lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Never forget, agile is here to save management, not software.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ox4.in&#x2F;colorings&#x2F;images&#x2F;drawings&#x2F;print&#x2F;gardener-coloring-pages-for-kids.jpg&quot; alt=&quot;engineers as gardeners&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Software development as an act of gardening rather than architecting:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Planting seeds&lt;&#x2F;strong&gt;: Just as gardeners start with seeds, we begin with initial ideas or prototypes. We cultivate these ideas, allowing them to grow and evolve.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Tending the garden&lt;&#x2F;strong&gt;: We set up our infrastructure and build pipelines to nourish our code, much like watering plants and providing nutrients.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Adapting to changes&lt;&#x2F;strong&gt;: We face challenges like bugs and incidents, similar to dealing with pests or weather conditions in a garden. We adjust and care for our software as it matures.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Growing new features&lt;&#x2F;strong&gt;: As our product evolves, we cultivate new features or adjust existing ones. As planting new seeds or grafting branches to ensure the garden continues to thrive.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;By thinking of ourselves as gardeners, we focus on nurturing software through its life cycle. We prepare the soil, plant seeds, and guide their growth, adapting as needed and celebrating the results.&lt;&#x2F;p&gt;
&lt;p&gt;This approach aligns with our values of creativity, simplicity, and human-centered design. We create an ecosystem where ideas can flourish.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>traits of a good programmer</title>
		<published>2022-02-11T00:00:00+00:00</published>
		<updated>2022-02-11T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.arnaudiaz.com/blog/traits-good-programmer/" type="text/html"/>
		<id>https://www.arnaudiaz.com/blog/traits-good-programmer/</id>
		<content type="html">&lt;hr &#x2F;&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;&lt;h1 id=&quot;checklist&quot;&gt;Checklist&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;say please and thank you&lt;&#x2F;li&gt;
&lt;li&gt;show respect for the other person&#x27;s opinion, never say &amp;quot;you&#x27;re wrong&amp;quot;&lt;&#x2F;li&gt;
&lt;li&gt;if you are wrong, admit it&lt;&#x2F;li&gt;
&lt;li&gt;talk about your own mistakes before criticizing&lt;&#x2F;li&gt;
&lt;li&gt;be a good listener&lt;&#x2F;li&gt;
&lt;li&gt;be a good friend and a good son &lt;&#x2F;li&gt;
&lt;li&gt;don&#x27;t criticize, condemn, or complain&lt;&#x2F;li&gt;
&lt;li&gt;give honest and sincere appreciation&lt;&#x2F;li&gt;
&lt;li&gt;treat people well&lt;&#x2F;li&gt;
&lt;li&gt;become genuinely interested in other people&lt;&#x2F;li&gt;
&lt;li&gt;breathe clean air&lt;&#x2F;li&gt;
&lt;li&gt;exercise your body, mind and spirit&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>bill evans</title>
		<published>2021-03-02T00:00:00+00:00</published>
		<updated>2021-03-02T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.arnaudiaz.com/blog/bill-evans/" type="text/html"/>
		<id>https://www.arnaudiaz.com/blog/bill-evans/</id>
		<content type="html">&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;the-creative-process-and-self-teaching&quot;&gt;The Creative Process and Self-Teaching&lt;&#x2F;h1&gt;
&lt;p&gt;Evans discusses the step-by-step process of creative problem-solving.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;nofollow noreferrer&quot; title=&quot;Bill Evans on the creative process&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=YEHWaGuurUk&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;i2.wp.com&#x2F;www.caravanjazz.es&#x2F;wp-content&#x2F;uploads&#x2F;2020&#x2F;09&#x2F;Bill-Evans.jpg&quot; alt=&quot;bill evans on creative process&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;&lt;h1 id=&quot;be-real-and-true&quot;&gt;Be real and true&lt;&#x2F;h1&gt;
&lt;p&gt;People tend to approximate the product rather than attacking it in a realistic, true way at any elementary level — regardless of how elementary — but it must be entirely true and entirely real and entirely accurate. &lt;strong&gt;They would rather approximate the entire problem than to take a small part of it and be real and true about it.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;if-you-re-confused-you-won-t-find-your-way-out&quot;&gt;If you&#x27;re confused, you won&#x27;t find your way out&lt;&#x2F;h1&gt;
&lt;p&gt;To approximate the whole thing in a vague way gives you a feeling that you’ve more or less touched the thing, but in this way &lt;strong&gt;you just lead yourself toward confusion&lt;&#x2F;strong&gt; and ultimately you’re going to get so confused that you’ll never find your way out.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;build-on-what-you-know&quot;&gt;Build on what you know&lt;&#x2F;h1&gt;
&lt;p&gt;They’re trying to do a thing in a way that is so general [that] they can’t possibly build on that. If they build on that, they’re building on top of confusion and vagueness and they can’t possibly progress. &lt;strong&gt;If you try to approximate something that is very advanced and don’t know what you’re doing, you can’t advance.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;subconscious&quot;&gt;Subconscious&lt;&#x2F;h1&gt;
&lt;p&gt;The whole process of learning the facility to play jazz, is to &lt;strong&gt;take these problems from the outer level in&lt;&#x2F;strong&gt;, one by one, and to stay with it at a very intense conscience concentration level, &lt;strong&gt;until that process becomes secondary and subconscious&lt;&#x2F;strong&gt;. Now, when that becomes subconscious, then you can begin concentrating on that next problem, which will allow you to do a little bit more…&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;footnotes&quot;&gt;Footnotes&lt;&#x2F;h1&gt;
&lt;p&gt;Additional reading.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;animationresources.org&#x2F;theory-bill-evans-on-the-creative-process-and-self-teaching&#x2F;&quot;&gt;animation resources&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;www.brainpickings.org&#x2F;2014&#x2F;10&#x2F;30&#x2F;the-universal-mind-of-bill-evans&#x2F;&quot;&gt;brain picknigs&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;nofollow noreferrer&quot; href=&quot;https:&#x2F;&#x2F;www.presentationzen.com&#x2F;presentationzen&#x2F;2016&#x2F;05&#x2F;the-creative-process.html&quot;&gt;presentationzen&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>epoche etude postmortem</title>
		<published>2020-09-28T00:00:00+00:00</published>
		<updated>2020-09-28T00:00:00+00:00</updated>
		<link rel="alternate" href="https://www.arnaudiaz.com/blog/epoche-etude-postmortem/" type="text/html"/>
		<id>https://www.arnaudiaz.com/blog/epoche-etude-postmortem/</id>
		<content type="html">&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;epoche&quot;&gt;epoche&lt;&#x2F;h1&gt;
&lt;blockquote&gt;
&lt;p&gt;suspension of judgment&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Noun
&lt;ol&gt;
&lt;li&gt;in ancient skepticism,  the act of refraining from any conclusion for or against anything as the decisive step for the attainment of ataraxy&lt;&#x2F;li&gt;
&lt;li&gt;the methodological attitude of phenomenology in which one refrains from judging whether anything exists or can exist as the first step in the phenomenological recognition, comprehension, and description of sense appearances : transcendental reduction&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;etude&quot;&gt;etude&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;Noun
&lt;ol&gt;
&lt;li&gt;piece of music for the practice of a point of technique&lt;&#x2F;li&gt;
&lt;li&gt;composition built on a technical motive but played for its artistic value&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;postmortem&quot;&gt;postmortem&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Adjective&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;done, occurring, or collected after death postmortem tissue specimens&lt;&#x2F;li&gt;
&lt;li&gt;following the event&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Noun&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;an examination of a body after death to determine the cause of death or the character and extent of changes produced by disease, critical examination, evaluation, or assessment of someone or something past.&lt;&#x2F;li&gt;
&lt;li&gt;an analysis or discussion of an event after it is over&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
</feed>
